알고리즘 수행시간을 지배하는 것은 "반복문"이다

1. 선형 시간 : 이동평균 구하기
2. 선형 이하 시간: logN 성형 전 사진 찾기 (이진탐색)
3. 다항 시간 알고리즘: 알러지가 심한 친구들 (지수 시간)

빅오 표기법
1. 가장 빨리 증가하는 항만 표기법
2. 변수가 두개면 각각 가장 빨리 증가하는 항 표기
2-1: 1/64 N^2M + 64NM => O(N^2M) = 가장 빠른것만 남기고 제거
2-2: N^2M + NlgM + NM^2 => O(N^2M + NM^2) = 두개중 뭐가 빠를지 몰라서 둘다 표기법
3: 수행시간의 상한임
4: 꼭 최악은 아님

시간 복잡도의 분할 상환 분석
예: n명이 n개의 라면을 먹으면 누군 못먹고 누군 많이 먹었어도 평균 1개의 라면을 먹은것임
따라서 각 작업에 걸리는 시간은 모두 다르지만 전체 작업에 걸리는 시간이 일정하다면 
분할 상환 분석을 사용할 수 있음

반복문 실행 획수가 초당 억을 넘어가면 시간 제한을 초과할 가능성이 높음
1. O(N^3) = 2560
2. O(N^2) = 40960
3. O(NlogN) = 2천만
4. O(N) = 1억 6천만



