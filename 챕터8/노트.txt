동적 계획법
    주어진 문제를 더 작은 문제들로 나눈 뒤 각 조각의 답을 계싼하고, 이 답들로부터 원래 문제에 대한 답을 계산해 내기 때문에
    분할 정복과 같은 접근 방식임

    같은 문제를 여러 번 계산 하는 대신 계산 결과를 재활용함

    계산한 값을 저장하는 메모리의 장소를 캐시라고 부름

메모이제이션 구현 패턴
    항상 기저 사례를 제일 먼저 처리한다
    캐시를 모두 -1로 초기화 한다 (만약 반환 값이 양수일경우만)

    메모이제이션 사용 예)
    let cache = []
    function foo (a, b){
        //기저 사례 처리
        if(...) return ...
        //a,b에 대한 답을 구했다면 바로 반환
        let result = cache[a][b]
        if(result != -1) return result
        //답 계산
        ...
        cache[a][b] = foo(...)
        return cache[a][b]
    }


동적 계획법 알고리즘을 만드는 첫 단계는 항상 해당 문제를 재귀적으로
해결하는 완전 탐색 알고리즘을 만드는 것임

